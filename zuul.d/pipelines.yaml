---
- pipeline:
    name: check
    description: |
      Newly uploaded patchsets enter this pipeline to receive an
      initial +/-1 Verified vote.
    manager: independent
    precedence: normal
    trigger:
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    start:
      github.com:
        check: in_progress
        comment: false
        status: 'pending'
    success:
      github.com:
        check: success
        comment: false
        status: 'success'
      mysql:
    failure:
      github.com:
        check: failure
        comment: false
        status: 'failure'
      mysql:

- pipeline:
    name: gate
    description: |
      Changes that have been approved by core developers are enqueued
      in order in this pipeline, and if they pass tests, will be
      merged.
    success-message: Build succeeded (gate pipeline).
    failure-message: |
      Build failed (gate pipeline).  For information on how to proceed, see
      http://docs.openstack.org/infra/manual/developers.html#automated-testing
    manager: dependent
    precedence: high
    require:
      github.com:
        label:
          - gate
        status: "ansible-zuul\\[bot\\]:ansible/check:success"
        open: true
        current-patchset: true
    trigger:
      github.com:
        - event: pull_request
          action: status
          status: "ansible-zuul\\[bot\\]:ansible/check:success"
        - event: pull_request
          action: labeled
          label:
            - gate
    start:
      github.com:
        check: in_progress
        comment: false
        status: 'pending'
    success:
      github.com:
        check: success
        comment: false
        merge: true
        status: 'success'
      mysql:
    failure:
      github.com:
        check: failure
        comment: false
        status: 'failure'
      mysql:
    window-floor: 20
    window-increase-factor: 2

- pipeline:
    name: post
    description: |
      This pipeline runs jobs that operate after each change is
      merged. Queue items are identified by the abbreviated hash (git
      log --format=%h) of the merge commit.
    manager: supercedent
    precedence: high
    post-review: true
    trigger:
      github.com:
        - event: push
          ref: ^refs/heads/.*$
    success:
      mysql:
    failure:
      mysql:

- pipeline:
    name: promote
    description: |
      This pipeline runs jobs that operate after each change is merged
      in order to promote artifacts generated in the gate pipeline.
    success-message: Build succeeded (promote pipeline).
    failure-message: |
      Build failed (promote pipeline).  For information on how to proceed, see
      http://docs.openstack.org/infra/manual/developers.html#automated-testing
    manager: supercedent
    precedence: high
    post-review: true
    trigger:
      github.com:
        - event: pull_request
          action: closed
    require:
      github.com:
        merged: true
    success:
      github.com:
        status: success
      mysql:
    failure:
      github.com:
        status: failure
      mysql:

- pipeline:
    name: tag
    description: This pipeline runs jobs in response to any tag event.
    manager: independent
    precedence: high
    post-review: true
    trigger:
      github.com:
        - event: push
          ref: ^refs/tags/.*$
    success:
      mysql:
    failure:
      mysql:

- pipeline:
    name: pre-release
    description: When a commit is tagged with a pre-release tag, this pipeline runs jobs that publish archives and documentation.
    manager: independent
    precedence: high
    post-review: true
    trigger:
      github.com:
        - event: push
          ref: ^refs/tags/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)$
    success:
      mysql:
    failure:
      mysql:

- pipeline:
    name: release
    description: When a commit is tagged as a release, this pipeline runs jobs that publish archives and documentation.
    manager: independent
    precedence: high
    post-review: true
    trigger:
      github.com:
        - event: push
          ref: ^refs/tags/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$
    success:
      mysql:
      smtp:
        from: ansible-zuul@redhat.com
        to: ansible-zuul@redhat.com
        subject: 'Release of {change.project} for ref {change.ref} successful'
    failure:
      mysql:
      smtp:
        from: ansible-zuul@redhat.com
        to: ansible-zuul@redhat.com
        subject: 'Release of {change.project} for ref {change.ref} failed'

- pipeline:
    name: periodic
    post-review: true
    description: Jobs in this queue are triggered daily.
    manager: independent
    precedence: low
    trigger:
      timer:
        - time: '0 0 * * *'
    success:
      mysql:
    failure:
      mysql:

- pipeline:
    name: periodic-1hr
    post-review: true
    description: Jobs in this queue are triggered hourly.
    manager: independent
    precedence: low
    trigger:
      timer:
        - time: '0 * * * *'
    success:
      mysql:
    failure:
      mysql:

- pipeline:
    name: periodic-6hr
    post-review: true
    description: Jobs in this queue are triggered every 6 hours.
    manager: independent
    precedence: low
    trigger:
      timer:
        - time: '0 */6 * * *'
    success:
      mysql:
    failure:
      mysql:

- pipeline:
    name: periodic-weekly
    post-review: true
    description: Jobs in this queue are triggered on a weekly timer.
    manager: independent
    precedence: low
    trigger:
      timer:
        # Saturday 8am UTC is a better time to start weekend jobs, as Sunday
        # is a working day in some geographies.
        - time: '0 8 * * 6'
    success:
      mysql:
    failure:
      mysql:

- pipeline:
    name: experimental
    description: On-demand pipeline for requesting a run against a set of jobs that are not yet gating. Leave review comment of "check experimental" to run jobs in this pipeline.
    success-message: Build succeeded (experimental pipeline).
    failure-message: Build failed (experimental pipeline).
    manager: independent
    precedence: low
    trigger:
      github.com:
        - event: pull_request
          action: comment
          comment: (?i)^\s*check experimental\s*$
    success:
      github.com: {}
      mysql:
    failure:
      github.com: {}
      mysql:

- pipeline:
    name: unlabel-on-push
    description: |
      If a PR is pushed to and has the gate label, we want to remove that.
    manager: independent
    precedence: high
    trigger:
      github.com:
        - event: pull_request
          action:
            - changed
    require:
      github.com:
        label:
          - gate
    success:
      github.com:
        unlabel:
          - gate
        comment: false
      mysql:
    failure:
      mysql:

- pipeline:
    name: lgtm
    description: |
      A pipeline to run lgtm jobs.
    manager: independent
    precedence: high
    trigger:
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - comment
            - reopened
    start:
      github.com:
        comment: false
        status: pending
    success:
      github.com:
        comment: false
        status: success
      mysql:
    failure:
      github.com:
        comment: false
        status: failure
      mysql:

- pipeline:
    name: merge-check
    description: >
      Each time a change merges, this pipeline verifies that all open changes
      on the same project are still mergeable.
    failure-message: Build failed (merge-check pipeline).
    manager: independent
    precedence: low
    ignore-dependencies: true
    trigger: {}

- pipeline:
    name: third-party-check
    description: |
      Newly uploaded patchsets to projects that are external to Ansible
      enter this pipeline to receive an initial +/-1 Verified vote.
    success-message: Build succeeded (third-party-check pipeline).
    # TODO(mordred) We should write a document for non-OpenStack developers
    failure-message: |
      Build failed (third-party-check pipeline) integration testing with
      Ansible.
    manager: independent
    precedence: low
    trigger:
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    start:
      github.com:
        check: in_progress
        comment: false
    success:
      github.com:
        check: success
        comment: false
      mysql:
    failure:
      github.com:
        check: failure
        comment: false
      mysql:
    # Don't report merge-failures to github.com
    merge-failure:
      mysql:

- pipeline:
    name: 3pci-check
    description: |
      Newly uploaded patchsets to projects that are external to Ansible
      enter this pipeline to receive an initial +/-1 Verified vote.
    success-message: Build succeeded (third-party-check pipeline).
    # TODO(mordred) We should write a document for non-OpenStack developers
    failure-message: |
      Build failed (third-party-check pipeline) integration testing with
      Ansible.
    manager: independent
    precedence: low
    trigger:
      github-3pci:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    start:
      github-3pci:
        status: pending
        status-url: 'https://dashboard.zuul.ansible.com/t/ansible/status/change/{change.number},{change.patchset}'
        comment: false
    success:
      github-3pci:
        status: 'success'
        status-url: 'https://dashboard.zuul.ansible.com/t/ansible/buildset/{buildset.uuid}'
      mysql:
    failure:
      github-3pci:
        status: 'failure'
        status-url: 'https://dashboard.zuul.ansible.com/t/ansible/buildset/{buildset.uuid}'
      mysql:
    # Don't report merge-failures to github.com
    merge-failure:
      mysql:

- pipeline:
    name: third-party-check-silent
    description: |
      Newly uploaded patchsets to projects that are external to Ansible
      enter this pipeline to receive an initial +/-1 Verified vote.
    success-message: Build succeeded (third-party-check pipeline).
    # TODO(mordred) We should write a document for non-OpenStack developers
    failure-message: |
      Build failed (third-party-check pipeline) integration testing with
      Ansible.
    manager: independent
    precedence: low
    trigger:
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    success:
      mysql:
    failure:
      mysql:
    # Don't report merge-failures to github.com
    merge-failure:
      mysql:
